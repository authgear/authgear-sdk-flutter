name: CI

on:
  push:
    branches:
    - '*'
    - '!gh-pages'
  pull_request:
    branches:
    - '*'
    - '!gh-pages'

jobs:
  test-ios:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
    - uses: subosito/flutter-action@v2
      with:
        # This has to be kept in sync with .tool-versions
        flutter-version: '3.27.1'
        channel: 'stable'
        # This action takes 1m30s to finish. Enable cache to make it shorter.
        cache: true
    - run: make example-flutter-pub-get
    - run: make example-flutter-test
    - run: make example-flutter-analyze
    - run: make example-dart-format
    - run: make example-pod-install
    - run: make example-build-unsigned-ios-app

  test-android:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - uses: subosito/flutter-action@v2
      with:
        # This has to be kept in sync with .tool-versions
        flutter-version: '3.27.1'
        channel: 'stable'
        # This action takes 1m30s to finish. Enable cache to make it shorter.
        cache: true
    - run: make example-flutter-pub-get
    - run: make example-flutter-test
    - run: make example-flutter-analyze
    - run: make example-dart-format
    - run: make example-build-unsigned-android-aab

  deploy-docs:
    runs-on: ubuntu-24.04
    needs: ["test-ios", "test-android"]
    steps:
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
      with:
        # This has to be kept in sync with .tool-versions
        flutter-version: '3.27.1'
        channel: 'stable'
        # This action takes 1m30s to finish. Enable cache to make it shorter.
        cache: true
    - run: make sdk-flutter-pub-get
    - run: make sdk-flutter-test
    - run: make sdk-flutter-analyze
    - run: make sdk-dart-format
    # Install the latest dartdoc to avoid a bug
    # See DEVELOPER.md
    - run: flutter pub global activate dartdoc
    - run: flutter pub global run dartdoc
    - name: Deploy docs to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.repository == 'authgear/authgear-sdk-flutter' && github.ref == 'refs/heads/main' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./doc/api

  deploy-ios:
    runs-on: macos-14
    needs: ["test-ios"]
    if: ${{ github.repository == 'authgear/authgear-sdk-flutter' }}
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
    - uses: subosito/flutter-action@v2
      with:
        # This has to be kept in sync with .tool-versions
        flutter-version: '3.27.1'
        channel: 'stable'
        # This action takes 1m30s to finish. Enable cache to make it shorter.
        cache: true
    - run: make example-flutter-pub-get
    - run: make example-flutter-test
    - run: make example-flutter-analyze
    - run: make example-dart-format
    - run: make example-pod-install
    - uses: authgear/gh-actions-install-apple-certificate-and-provisioning-profile@v1
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        certificate_base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
        certificate_password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        provisioning_profile_base64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
    - uses: authgear/gh-actions-create-fastlane-api-key-json-file@v1
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        api_key_id: ${{ secrets.IOS_API_KEY_ID }}
        api_key_issuer: ${{ secrets.IOS_API_KEY_ISSUER }}
        api_key_base64: ${{ secrets.IOS_API_KEY_BASE64 }}
        output_path: ./build/fastlane-api-key.json
    - run: make example-build-ios-app
      if: ${{ github.ref == 'refs/heads/main' }}
    - name: Upload to TestFlight
      if: ${{ github.ref == 'refs/heads/main' }}
      run: make example-upload-ios-app

  deploy-android:
    runs-on: macos-14
    needs: ["test-android"]
    if: ${{ github.repository == 'authgear/authgear-sdk-flutter' }}
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - uses: subosito/flutter-action@v2
      with:
        # This has to be kept in sync with .tool-versions
        flutter-version: '3.27.1'
        channel: 'stable'
        # This action takes 1m30s to finish. Enable cache to make it shorter.
        cache: true
    - run: make example-flutter-pub-get
    - run: make example-flutter-test
    - run: make example-flutter-analyze
    - run: make example-dart-format
    - name: Build aab
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        STORE_BASE64: ${{ secrets.ANDROID_KEY_STORE_BASE64 }}
        STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        export STORE_FILE="$RUNNER_TEMP/upload_key.jks"
        echo -n "$STORE_BASE64" | base64 --decode -o "$STORE_FILE"
        make example-build-android-aab
    - name: Upload aab
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64 }}
      run: |
        export GOOGLE_SERVICE_ACCOUNT_KEY_JSON_FILE="$RUNNER_TEMP/google_service_account_key.json"
        echo -n "$GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64" | base64 --decode -o "$GOOGLE_SERVICE_ACCOUNT_KEY_JSON_FILE"
        make example-upload-android-aab
